name: Create PR from Postman Updates

on:
  push:
    branches: ['postman-updates']
  workflow_dispatch:

jobs:
  create-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      repository-projects: write

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Validate tools before creating PR
      id: validate
      run: |
        echo "Validating tools after Postman updates..."

        # Check for syntax errors
        node -e "
        try {
          const { toolPaths } = require('./tools/paths.js');
          console.log('✅ paths.js syntax valid');
        } catch (error) {
          console.error('❌ paths.js syntax error:', error.message);
          process.exit(1);
        }"

        # Run tool validation
        node validateTools.js

        # Test build
        npm run build

        echo "validation_passed=true" >> $GITHUB_OUTPUT

    - name: Create issue if validation fails
      if: failure()
      run: |
        gh issue create \
          --title "🚨 Postman Update Failed Validation" \
          --body "## ❌ Tool Validation Failed

        The latest Postman collection update failed validation checks.

        ### 🔍 Error Details
        Check the workflow logs for specific validation errors:
        ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

        ### 🛠 Next Steps
        1. Review the validation errors in the workflow logs
        2. Fix any syntax errors or duplicate entries in paths.js
        3. Manually validate tools with \`node validateTools.js\`
        4. Re-run the workflow or push fixes to postman-updates branch

        ### 📊 Validation Checks
        - paths.js syntax validation
        - Tool definition validation
        - Build test
        - Duplicate detection

        **This prevents broken tools from being deployed to production.**" \
          --label "bug" \
          --label "postman" \
          --label "validation-failed"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for existing PR
      id: check-pr
      run: |
        PR_EXISTS=$(gh pr list --head postman-updates --base staging --json number --jq length)
        echo "pr_exists=$PR_EXISTS" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Pull Request
      if: steps.check-pr.outputs.pr_exists == '0' && steps.validate.outputs.validation_passed == 'true'
      run: |
        gh pr create \
          --title "📋 Postman Collection Updates" \
          --body "$(cat <<'EOF'
        ## 📊 Postman Collection Update

        This PR contains updates from the Postman collection.

        ### ✅ Validation Status
        - Tools validation: ✅ Passed
        - Build test: ✅ Passed
        - Syntax check: ✅ Passed

        ### 🔍 Changes
        - Postman collection files have been updated
        - All tools validated successfully
        - Review the collection changes and merge when ready

        ---
        *This PR was automatically created when Postman pushed to postman-updates branch.*
        *All validation checks passed before creating this PR.*
        EOF
        )" \
          --head postman-updates \
          --base staging
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update existing PR comment
      if: steps.check-pr.outputs.pr_exists != '0'
      run: |
        PR_NUMBER=$(gh pr list --head postman-updates --base staging --json number --jq '.[0].number')
        gh pr comment $PR_NUMBER --body "🔄 **New changes detected:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")

        Additional Postman collection updates have been pushed to this branch."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}