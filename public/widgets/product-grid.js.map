{
  "version": 3,
  "sources": ["../../widgets/src/product-grid.tsx", "../../widgets/hooks/useOpenAiGlobal.ts", "../../widgets/hooks/useWidgetState.ts"],
  "sourcesContent": ["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useOpenAiGlobal, useWidgetState } from '../hooks';\n\ninterface Product {\n  id: number;\n  product_name: string;\n  slug?: string;\n  sku: string;\n  price: number | null;\n  stock: number | null;\n  category?: string;\n  is_active: number;\n  product_variants_count?: number;\n  parent_id?: number | null;\n}\n\ninterface CartItem {\n  id: number;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n}\n\ninterface WidgetStateType {\n  cart: {\n    items: CartItem[];\n    total: number;\n  };\n}\n\nfunction ProductGrid() {\n  // Get data from tool invocation\n  const toolInput = (window as any).openai?.toolInput;\n  const apiResponse = toolInput || {};\n  const products: Product[] = apiResponse?.data?.products || apiResponse?.products || [];\n\n  // Debug logging\n  console.log('ProductGrid render:', {\n    hasToolInput: !!toolInput,\n    apiResponse,\n    productsCount: products.length\n  });\n\n  // Widget state for cart\n  const [widgetState, updateWidgetState] = useWidgetState<WidgetStateType>({\n    cart: { items: [], total: 0 }\n  });\n\n  // Display mode for responsive layout\n  const displayMode = useOpenAiGlobal('displayMode');\n\n  // Local search state\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\n\n  // Loading state - show loading until we have toolInput\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Update loading state when toolInput arrives\n  useEffect(() => {\n    if (toolInput !== undefined) {\n      setIsLoading(false);\n    }\n  }, [toolInput]);\n\n  // Update filtered products when products data changes\n  useEffect(() => {\n    setFilteredProducts(products);\n  }, [products.length]);\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setFilteredProducts(products);\n    } else {\n      const filtered = products.filter(p =>\n        p.product_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        p.sku?.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n      setFilteredProducts(filtered);\n    }\n  }, [searchQuery, products]);\n\n  const handleAddToCart = (product: Product) => {\n    const existingItem = widgetState.cart.items.find(item => item.id === product.id);\n    const productPrice = product.price || 0;\n\n    let newCart;\n    if (existingItem) {\n      // Increment quantity\n      newCart = {\n        items: widgetState.cart.items.map(item =>\n          item.id === product.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        ),\n        total: widgetState.cart.total + productPrice\n      };\n    } else {\n      // Add new item\n      newCart = {\n        items: [...widgetState.cart.items, {\n          id: product.id,\n          name: product.product_name,\n          price: productPrice,\n          quantity: 1,\n          image: 'https://via.placeholder.com/100'\n        }],\n        total: widgetState.cart.total + productPrice\n      };\n    }\n\n    updateWidgetState({ cart: newCart });\n\n    // Notify Claude\n    (window as any).openai?.sendMessage(`Added ${product.product_name} to cart (Price TBD)`);\n  };\n\n  const handleViewCart = () => {\n    (window as any).openai?.sendMessage('Show my cart');\n  };\n\n  const getStockBadge = (stock: number | null) => {\n    if (!stock || stock === 0) return { label: 'Out of Stock', className: 'stock-out' };\n    if (stock <= 5) return { label: `Low (${stock})`, className: 'stock-low' };\n    return { label: `In Stock (${stock})`, className: 'stock-in' };\n  };\n\n  const cartItemCount = widgetState.cart.items.reduce((sum, item) => sum + item.quantity, 0);\n\n  // Show loading state while waiting for permission/toolInput\n  if (isLoading) {\n    return (\n      <div className=\"product-grid-container loading\">\n        <style>{`\n          .product-grid-container.loading {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            min-height: 400px;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          }\n          .loading-content {\n            text-align: center;\n            color: white;\n          }\n          .loading-spinner {\n            width: 50px;\n            height: 50px;\n            border: 4px solid rgba(255, 255, 255, 0.3);\n            border-top-color: white;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            margin: 0 auto 1rem;\n          }\n          @keyframes spin {\n            to { transform: rotate(360deg); }\n          }\n        `}</style>\n        <div className=\"loading-content\">\n          <div className=\"loading-spinner\"></div>\n          <h2>Loading Products...</h2>\n          <p>Waiting for data</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`product-grid-container ${displayMode}`}>\n      <style>{`\n        .product-grid-container {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          padding: 1rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          min-height: 400px;\n          max-height: 600px;\n          overflow-y: auto;\n        }\n\n        .product-grid-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1.5rem;\n        }\n\n        .product-grid-title {\n          color: white;\n          font-size: 2rem;\n          font-weight: 700;\n          margin: 0;\n        }\n\n        .cart-badge {\n          position: relative;\n          background: white;\n          padding: 0.5rem 1rem;\n          border-radius: 8px;\n          cursor: pointer;\n          transition: transform 0.2s;\n        }\n\n        .cart-badge:hover {\n          transform: scale(1.05);\n        }\n\n        .cart-count {\n          position: absolute;\n          top: -8px;\n          right: -8px;\n          background: #ef4444;\n          color: white;\n          border-radius: 50%;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 0.75rem;\n          font-weight: 700;\n        }\n\n        .search-bar {\n          margin-bottom: 1.5rem;\n        }\n\n        .search-input {\n          width: 100%;\n          padding: 0.75rem 1rem;\n          border: none;\n          border-radius: 8px;\n          font-size: 1rem;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n        }\n\n        .product-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n          gap: 1.5rem;\n        }\n\n        .product-grid-container.pip .product-grid {\n          grid-template-columns: repeat(2, 1fr);\n          gap: 1rem;\n        }\n\n        .product-card {\n          background: white;\n          border-radius: 12px;\n          overflow: hidden;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n          transition: transform 0.2s, box-shadow 0.2s;\n        }\n\n        .product-card:hover {\n          transform: translateY(-4px);\n          box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);\n        }\n\n        .product-image {\n          width: 100%;\n          height: 200px;\n          object-fit: cover;\n          background: #f3f4f6;\n        }\n\n        .product-info {\n          padding: 1rem;\n        }\n\n        .product-name {\n          font-size: 1.125rem;\n          font-weight: 600;\n          color: #1f2937;\n          margin: 0 0 0.5rem;\n          display: -webkit-box;\n          -webkit-line-clamp: 2;\n          -webkit-box-orient: vertical;\n          overflow: hidden;\n        }\n\n        .product-description {\n          font-size: 0.875rem;\n          color: #6b7280;\n          margin-bottom: 0.75rem;\n          display: -webkit-box;\n          -webkit-line-clamp: 2;\n          -webkit-box-orient: vertical;\n          overflow: hidden;\n        }\n\n        .product-price {\n          font-size: 1.5rem;\n          font-weight: 700;\n          color: #667eea;\n          margin-bottom: 0.5rem;\n        }\n\n        .stock-badge {\n          display: inline-block;\n          padding: 0.25rem 0.75rem;\n          border-radius: 4px;\n          font-size: 0.75rem;\n          font-weight: 600;\n          margin-bottom: 0.75rem;\n        }\n\n        .stock-in {\n          background: #d1fae5;\n          color: #065f46;\n        }\n\n        .stock-low {\n          background: #fef3c7;\n          color: #92400e;\n        }\n\n        .stock-out {\n          background: #fee2e2;\n          color: #991b1b;\n        }\n\n        .add-to-cart-btn {\n          width: 100%;\n          padding: 0.75rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          border-radius: 8px;\n          font-size: 1rem;\n          font-weight: 600;\n          cursor: pointer;\n          transition: opacity 0.2s;\n        }\n\n        .add-to-cart-btn:hover:not(:disabled) {\n          opacity: 0.9;\n        }\n\n        .add-to-cart-btn:disabled {\n          background: #9ca3af;\n          cursor: not-allowed;\n        }\n\n        .empty-state {\n          text-align: center;\n          color: white;\n          padding: 4rem 2rem;\n        }\n\n        .empty-icon {\n          font-size: 4rem;\n          margin-bottom: 1rem;\n        }\n\n        @media (max-width: 768px) {\n          .product-grid {\n            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n            gap: 1rem;\n          }\n\n          .product-grid-title {\n            font-size: 1.5rem;\n          }\n        }\n      `}</style>\n\n      <div className=\"product-grid-header\">\n        <h1 className=\"product-grid-title\">Products</h1>\n        {cartItemCount > 0 && (\n          <div className=\"cart-badge\" onClick={handleViewCart}>\n            \uD83D\uDED2 Cart\n            <span className=\"cart-count\">{cartItemCount}</span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          className=\"search-input\"\n          placeholder=\"Search products by name or SKU...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n      </div>\n\n      {filteredProducts.length === 0 ? (\n        <div className=\"empty-state\">\n          <div className=\"empty-icon\">\uD83D\uDCE6</div>\n          <h2>No products found</h2>\n          <p>Try adjusting your search or filters</p>\n        </div>\n      ) : (\n        <div className=\"product-grid\">\n          {filteredProducts.map((product) => {\n            const stockBadge = getStockBadge(product.stock);\n            return (\n              <div key={product.id} className=\"product-card\">\n                <img\n                  src={'https://via.placeholder.com/300x200?text=' + encodeURIComponent(product.product_name)}\n                  alt={product.product_name}\n                  className=\"product-image\"\n                />\n                <div className=\"product-info\">\n                  <h3 className=\"product-name\">{product.product_name}</h3>\n                  {product.category && (\n                    <p className=\"product-description\">{product.category}</p>\n                  )}\n                  <div className=\"product-price\">\n                    {product.price ? `$${product.price.toFixed(2)}` : 'Price TBD'}\n                  </div>\n                  <span className={`stock-badge ${stockBadge.className}`}>\n                    {stockBadge.label}\n                  </span>\n                  <button\n                    className=\"add-to-cart-btn\"\n                    onClick={() => handleAddToCart(product)}\n                    disabled={!product.stock || product.stock === 0}\n                  >\n                    {product.stock && product.stock > 0 ? 'Add to Cart' : 'Out of Stock'}\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Mount widget\nconst root = document.getElementById('product-grid-root');\nif (root) {\n  ReactDOM.createRoot(root).render(<ProductGrid />);\n}\n", "import { useEffect, useState } from 'react';\n\n/**\n * Hook to access the OpenAI Apps SDK global API\n * Provides access to window.openai for tool calls, state, and messaging\n */\nexport function useOpenAiGlobal() {\n  const [openai, setOpenai] = useState<any>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && (window as any).openai) {\n      setOpenai((window as any).openai);\n    }\n  }, []);\n\n  return openai;\n}\n", "import { useState, useEffect } from 'react';\nimport { useOpenAiGlobal } from './useOpenAiGlobal';\n\n/**\n * Hook for managing widget state with OpenAI Apps SDK\n * Provides persistent state management under 4k token limit\n *\n * @param initialState - Initial state object\n * @returns [state, setState] tuple similar to useState\n */\nexport function useWidgetState<T>(initialState: T) {\n  const openai = useOpenAiGlobal();\n  const [state, setStateInternal] = useState<T>(initialState);\n\n  // Load persisted state on mount\n  useEffect(() => {\n    if (openai?.widgetState) {\n      const savedState = openai.widgetState.get();\n      if (savedState && Object.keys(savedState).length > 0) {\n        setStateInternal({ ...initialState, ...savedState });\n      }\n    }\n  }, [openai]);\n\n  // Persist state on change\n  const setState = (updates: Partial<T> | ((prev: T) => Partial<T>)) => {\n    setStateInternal(prev => {\n      const updatesToApply = typeof updates === 'function' ? updates(prev) : updates;\n      const newState = { ...prev, ...updatesToApply };\n\n      // Persist to OpenAI widget state\n      if (openai?.widgetState) {\n        openai.widgetState.set(newState);\n      }\n\n      return newState;\n    });\n  };\n\n  return [state, setState] as const;\n}\n"],
  "mappings": "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",
  "names": ["useState", "useEffect", "ReactDOM", "useEffect", "useState", "useOpenAiGlobal", "openai", "setOpenai", "useState", "useEffect", "useWidgetState", "initialState", "openai", "useOpenAiGlobal", "state", "setStateInternal", "useState", "useEffect", "savedState", "updates", "prev", "updatesToApply", "newState", "jsx", "jsxs", "ProductGrid", "toolInput", "apiResponse", "products", "widgetState", "updateWidgetState", "useWidgetState", "displayMode", "useOpenAiGlobal", "searchQuery", "setSearchQuery", "useState", "filteredProducts", "setFilteredProducts", "isLoading", "setIsLoading", "useEffect", "filtered", "p", "handleAddToCart", "product", "existingItem", "item", "productPrice", "newCart", "handleViewCart", "getStockBadge", "stock", "cartItemCount", "sum", "stockBadge", "root", "ReactDOM"]
}
