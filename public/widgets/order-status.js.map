{
  "version": 3,
  "sources": ["../../widgets/src/order-status.tsx", "../../widgets/hooks/useOpenAiGlobal.ts", "../../widgets/hooks/useWidgetState.ts"],
  "sourcesContent": ["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useOpenAiGlobal } from '../hooks';\n\ninterface OrderItem {\n  id: number;\n  name: string;\n  quantity: number;\n  price: number;\n  image?: string;\n}\n\ninterface Customer {\n  name: string;\n  email: string;\n  phone?: string;\n}\n\ninterface Address {\n  street: string;\n  city: string;\n  state: string;\n  zip: string;\n  country?: string;\n}\n\ninterface Order {\n  id: string | number;\n  orderNumber?: string;\n  status: 'pending' | 'processing' | 'shipped' | 'delivered' | 'cancelled';\n  items: OrderItem[];\n  customer: Customer;\n  deliveryAddress: Address;\n  paymentMethod: string;\n  subtotal: number;\n  tax: number;\n  shipping: number;\n  total: number;\n  createdAt?: string;\n  updatedAt?: string;\n  trackingNumber?: string;\n}\n\nfunction OrderStatus() {\n  // Get data from tool invocation\n  const toolInput = (window as any).openai?.toolInput;\n  const apiResponse = toolInput || {};\n  const orderData: Order = apiResponse?.order || apiResponse || {\n    id: '12345',\n    orderNumber: 'ORD-12345',\n    status: 'processing',\n    items: [],\n    customer: { name: 'Customer', email: 'customer@example.com' },\n    deliveryAddress: { street: '', city: '', state: '', zip: '' },\n    paymentMethod: 'Credit Card',\n    subtotal: 0,\n    tax: 0,\n    shipping: 0,\n    total: 0\n  };\n\n  // Display mode for responsive layout\n  const displayMode = useOpenAiGlobal('displayMode');\n\n  const [currentStatus, setCurrentStatus] = useState(orderData.status);\n\n  const statusSteps = [\n    { key: 'pending', label: 'Order Placed', icon: '\uD83D\uDCDD' },\n    { key: 'processing', label: 'Processing', icon: '\u2699\uFE0F' },\n    { key: 'shipped', label: 'Shipped', icon: '\uD83D\uDE9A' },\n    { key: 'delivered', label: 'Delivered', icon: '\u2705' }\n  ];\n\n  const statusOrder = ['pending', 'processing', 'shipped', 'delivered'];\n  const currentStepIndex = statusOrder.indexOf(currentStatus);\n\n  const handleUpdateStatus = () => {\n    const nextIndex = Math.min(currentStepIndex + 1, statusOrder.length - 1);\n    const nextStatus = statusOrder[nextIndex] as Order['status'];\n    setCurrentStatus(nextStatus);\n    (window as any).openai?.sendMessage(`Updated order ${orderData.orderNumber || orderData.id} status to: ${nextStatus}`);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending': return '#f59e0b';\n      case 'processing': return '#3b82f6';\n      case 'shipped': return '#8b5cf6';\n      case 'delivered': return '#10b981';\n      case 'cancelled': return '#ef4444';\n      default: return '#6b7280';\n    }\n  };\n\n  return (\n    <div className={`order-status-container ${displayMode}`}>\n      <style>{`\n        .order-status-container {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          padding: 1.5rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          min-height: 100vh;\n        }\n\n        .status-header {\n          text-align: center;\n          margin-bottom: 2rem;\n        }\n\n        .status-title {\n          color: white;\n          font-size: 2rem;\n          font-weight: 700;\n          margin: 0 0 0.5rem;\n        }\n\n        .order-number {\n          color: white;\n          font-size: 1.125rem;\n          opacity: 0.9;\n        }\n\n        .status-timeline {\n          background: white;\n          border-radius: 12px;\n          padding: 2rem;\n          margin-bottom: 1.5rem;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .timeline-steps {\n          display: flex;\n          justify-content: space-between;\n          position: relative;\n          margin-bottom: 1rem;\n        }\n\n        .timeline-line {\n          position: absolute;\n          top: 30px;\n          left: 0;\n          right: 0;\n          height: 4px;\n          background: #e5e7eb;\n          z-index: 0;\n        }\n\n        .timeline-progress {\n          position: absolute;\n          top: 30px;\n          left: 0;\n          height: 4px;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          transition: width 0.5s ease;\n          z-index: 1;\n        }\n\n        .timeline-step {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          position: relative;\n          z-index: 2;\n        }\n\n        .step-icon {\n          width: 60px;\n          height: 60px;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 1.5rem;\n          background: #e5e7eb;\n          border: 4px solid white;\n          transition: all 0.3s;\n          margin-bottom: 0.75rem;\n        }\n\n        .timeline-step.active .step-icon,\n        .timeline-step.completed .step-icon {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          transform: scale(1.1);\n        }\n\n        .step-label {\n          font-size: 0.875rem;\n          font-weight: 600;\n          color: #6b7280;\n          text-align: center;\n        }\n\n        .timeline-step.active .step-label,\n        .timeline-step.completed .step-label {\n          color: #667eea;\n        }\n\n        .order-details {\n          display: grid;\n          grid-template-columns: 1fr;\n          gap: 1.5rem;\n        }\n\n        .order-status-container:not(.pip) .order-details {\n          grid-template-columns: 2fr 1fr;\n        }\n\n        .details-card {\n          background: white;\n          border-radius: 12px;\n          padding: 1.5rem;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .card-title {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin: 0 0 1rem;\n          padding-bottom: 0.75rem;\n          border-bottom: 2px solid #f3f4f6;\n        }\n\n        .order-items {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n        }\n\n        .order-item {\n          display: flex;\n          gap: 1rem;\n          padding-bottom: 1rem;\n          border-bottom: 1px solid #f3f4f6;\n        }\n\n        .order-item:last-child {\n          border-bottom: none;\n          padding-bottom: 0;\n        }\n\n        .item-image {\n          width: 60px;\n          height: 60px;\n          object-fit: cover;\n          border-radius: 8px;\n          background: #f3f4f6;\n        }\n\n        .item-info {\n          flex: 1;\n        }\n\n        .item-name {\n          font-weight: 600;\n          color: #1f2937;\n          margin-bottom: 0.25rem;\n        }\n\n        .item-quantity {\n          font-size: 0.875rem;\n          color: #6b7280;\n        }\n\n        .item-price {\n          font-weight: 600;\n          color: #667eea;\n          text-align: right;\n        }\n\n        .info-section {\n          margin-bottom: 1.5rem;\n        }\n\n        .info-section:last-child {\n          margin-bottom: 0;\n        }\n\n        .section-title {\n          font-size: 1rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin-bottom: 0.5rem;\n        }\n\n        .info-row {\n          display: flex;\n          justify-content: space-between;\n          padding: 0.5rem 0;\n          font-size: 0.875rem;\n        }\n\n        .info-label {\n          color: #6b7280;\n        }\n\n        .info-value {\n          color: #1f2937;\n          font-weight: 600;\n        }\n\n        .info-text {\n          font-size: 0.875rem;\n          color: #1f2937;\n          line-height: 1.5;\n        }\n\n        .status-badge {\n          display: inline-block;\n          padding: 0.5rem 1rem;\n          border-radius: 8px;\n          font-size: 0.875rem;\n          font-weight: 600;\n          text-transform: capitalize;\n        }\n\n        .total-row {\n          display: flex;\n          justify-content: space-between;\n          padding: 1rem 0;\n          border-top: 2px solid #e5e7eb;\n          margin-top: 0.5rem;\n          font-size: 1.25rem;\n          font-weight: 700;\n        }\n\n        .total-label {\n          color: #667eea;\n        }\n\n        .total-value {\n          color: #667eea;\n        }\n\n        .update-btn {\n          width: 100%;\n          padding: 1rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          border-radius: 8px;\n          font-size: 1rem;\n          font-weight: 600;\n          cursor: pointer;\n          margin-top: 1rem;\n          transition: opacity 0.2s;\n        }\n\n        .update-btn:hover:not(:disabled) {\n          opacity: 0.9;\n        }\n\n        .update-btn:disabled {\n          background: #9ca3af;\n          cursor: not-allowed;\n        }\n\n        .tracking-info {\n          background: #f3f4f6;\n          padding: 1rem;\n          border-radius: 8px;\n          margin-top: 1rem;\n        }\n\n        .tracking-label {\n          font-size: 0.875rem;\n          color: #6b7280;\n          margin-bottom: 0.25rem;\n        }\n\n        .tracking-number {\n          font-family: monospace;\n          font-size: 1rem;\n          font-weight: 600;\n          color: #1f2937;\n        }\n\n        @media (max-width: 768px) {\n          .order-status-container:not(.pip) .order-details {\n            grid-template-columns: 1fr;\n          }\n\n          .status-title {\n            font-size: 1.5rem;\n          }\n\n          .timeline-steps {\n            flex-wrap: wrap;\n          }\n\n          .step-icon {\n            width: 50px;\n            height: 50px;\n            font-size: 1.25rem;\n          }\n        }\n      `}</style>\n\n      <div className=\"status-header\">\n        <h1 className=\"status-title\">Order Status</h1>\n        <div className=\"order-number\">Order #{orderData.orderNumber || orderData.id}</div>\n      </div>\n\n      <div className=\"status-timeline\">\n        <div className=\"timeline-steps\">\n          <div className=\"timeline-line\"></div>\n          <div\n            className=\"timeline-progress\"\n            style={{ width: `${(currentStepIndex / (statusSteps.length - 1)) * 100}%` }}\n          ></div>\n          {statusSteps.map((step, index) => {\n            const stepStatus = index < currentStepIndex ? 'completed' :\n                             index === currentStepIndex ? 'active' : 'pending';\n            return (\n              <div key={step.key} className={`timeline-step ${stepStatus}`}>\n                <div className=\"step-icon\">{step.icon}</div>\n                <div className=\"step-label\">{step.label}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"order-details\">\n        <div className=\"details-card\">\n          <h2 className=\"card-title\">Order Items</h2>\n          <div className=\"order-items\">\n            {orderData.items.map((item) => (\n              <div key={item.id} className=\"order-item\">\n                <img\n                  src={item.image || 'https://via.placeholder.com/60?text=Item'}\n                  alt={item.name}\n                  className=\"item-image\"\n                />\n                <div className=\"item-info\">\n                  <div className=\"item-name\">{item.name}</div>\n                  <div className=\"item-quantity\">Qty: {item.quantity}</div>\n                </div>\n                <div className=\"item-price\">${(item.price * item.quantity).toFixed(2)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <div className=\"details-card\">\n            <h2 className=\"card-title\">Customer Info</h2>\n            <div className=\"info-section\">\n              <div className=\"info-text\">\n                <strong>{orderData.customer.name}</strong><br />\n                {orderData.customer.email}<br />\n                {orderData.customer.phone && <>{orderData.customer.phone}</>}\n              </div>\n            </div>\n\n            <div className=\"info-section\">\n              <div className=\"section-title\">Delivery Address</div>\n              <div className=\"info-text\">\n                {orderData.deliveryAddress.street}<br />\n                {orderData.deliveryAddress.city}, {orderData.deliveryAddress.state} {orderData.deliveryAddress.zip}\n                {orderData.deliveryAddress.country && <><br />{orderData.deliveryAddress.country}</>}\n              </div>\n            </div>\n\n            <div className=\"info-section\">\n              <div className=\"section-title\">Payment Method</div>\n              <div className=\"info-text\">{orderData.paymentMethod}</div>\n            </div>\n\n            <div className=\"info-section\">\n              <div className=\"section-title\">Current Status</div>\n              <span\n                className=\"status-badge\"\n                style={{ backgroundColor: getStatusColor(currentStatus) + '20', color: getStatusColor(currentStatus) }}\n              >\n                {currentStatus}\n              </span>\n            </div>\n\n            {orderData.trackingNumber && (\n              <div className=\"tracking-info\">\n                <div className=\"tracking-label\">Tracking Number</div>\n                <div className=\"tracking-number\">{orderData.trackingNumber}</div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"details-card\" style={{ marginTop: '1.5rem' }}>\n            <h2 className=\"card-title\">Order Summary</h2>\n            <div className=\"info-row\">\n              <span className=\"info-label\">Subtotal</span>\n              <span className=\"info-value\">${orderData.subtotal.toFixed(2)}</span>\n            </div>\n            <div className=\"info-row\">\n              <span className=\"info-label\">Tax</span>\n              <span className=\"info-value\">${orderData.tax.toFixed(2)}</span>\n            </div>\n            <div className=\"info-row\">\n              <span className=\"info-label\">Shipping</span>\n              <span className=\"info-value\">${orderData.shipping.toFixed(2)}</span>\n            </div>\n            <div className=\"total-row\">\n              <span className=\"total-label\">Total</span>\n              <span className=\"total-value\">${orderData.total.toFixed(2)}</span>\n            </div>\n            <button\n              className=\"update-btn\"\n              onClick={handleUpdateStatus}\n              disabled={currentStatus === 'delivered'}\n            >\n              {currentStatus === 'delivered' ? 'Order Delivered' : 'Update Status'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Mount widget\nconst root = document.getElementById('order-status-root');\nif (root) {\n  ReactDOM.createRoot(root).render(<OrderStatus />);\n}\n", "import { useEffect, useState } from 'react';\n\n/**\n * Hook to access the OpenAI Apps SDK global API\n * Provides access to window.openai for tool calls, state, and messaging\n */\nexport function useOpenAiGlobal() {\n  const [openai, setOpenai] = useState<any>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && (window as any).openai) {\n      setOpenai((window as any).openai);\n    }\n  }, []);\n\n  return openai;\n}\n", "import { useState, useEffect } from 'react';\nimport { useOpenAiGlobal } from './useOpenAiGlobal';\n\n/**\n * Hook for managing widget state with OpenAI Apps SDK\n * Provides persistent state management under 4k token limit\n *\n * @param initialState - Initial state object\n * @returns [state, setState] tuple similar to useState\n */\nexport function useWidgetState<T>(initialState: T) {\n  const openai = useOpenAiGlobal();\n  const [state, setStateInternal] = useState<T>(initialState);\n\n  // Load persisted state on mount\n  useEffect(() => {\n    if (openai?.widgetState) {\n      const savedState = openai.widgetState.get();\n      if (savedState && Object.keys(savedState).length > 0) {\n        setStateInternal({ ...initialState, ...savedState });\n      }\n    }\n  }, [openai]);\n\n  // Persist state on change\n  const setState = (updates: Partial<T> | ((prev: T) => Partial<T>)) => {\n    setStateInternal(prev => {\n      const updatesToApply = typeof updates === 'function' ? updates(prev) : updates;\n      const newState = { ...prev, ...updatesToApply };\n\n      // Persist to OpenAI widget state\n      if (openai?.widgetState) {\n        openai.widgetState.set(newState);\n      }\n\n      return newState;\n    });\n  };\n\n  return [state, setState] as const;\n}\n"],
  "mappings": "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",
  "names": ["useState", "ReactDOM", "useEffect", "useState", "useOpenAiGlobal", "openai", "setOpenai", "useState", "useEffect", "Fragment", "jsx", "jsxs", "OrderStatus", "apiResponse", "orderData", "displayMode", "useOpenAiGlobal", "currentStatus", "setCurrentStatus", "useState", "statusSteps", "statusOrder", "currentStepIndex", "handleUpdateStatus", "nextIndex", "nextStatus", "getStatusColor", "status", "step", "index", "stepStatus", "item", "root", "ReactDOM"]
}
