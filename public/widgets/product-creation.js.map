{
  "version": 3,
  "sources": ["../../widgets/src/product-creation.tsx", "../../widgets/hooks/useOpenAiGlobal.ts", "../../widgets/hooks/useWidgetState.ts"],
  "sourcesContent": ["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useOpenAiGlobal } from '../hooks';\n\ninterface Category {\n  id: number;\n  name: string;\n}\n\ninterface Brand {\n  id: number;\n  name: string;\n}\n\ninterface FormData {\n  name: string;\n  sku: string;\n  price: string;\n  stock: string;\n  categoryId: string;\n  brandId: string;\n  description: string;\n  imageUrl: string;\n}\n\ninterface FormErrors {\n  name?: string;\n  sku?: string;\n  price?: string;\n  stock?: string;\n  categoryId?: string;\n  brandId?: string;\n}\n\nfunction ProductCreation() {\n  // Get data from tool invocation\n  const toolInput = (window as any).openai?.toolInput;\n  const apiResponse = toolInput || {};\n  const categories: Category[] = apiResponse?.categories || [\n    { id: 1, name: 'Electronics' },\n    { id: 2, name: 'Clothing' },\n    { id: 3, name: 'Books' }\n  ];\n  const brands: Brand[] = apiResponse?.brands || [\n    { id: 1, name: 'Brand A' },\n    { id: 2, name: 'Brand B' },\n    { id: 3, name: 'Brand C' }\n  ];\n\n  // Display mode for responsive layout\n  const displayMode = useOpenAiGlobal('displayMode');\n\n  const [formData, setFormData] = useState<FormData>({\n    name: '',\n    sku: '',\n    price: '',\n    stock: '',\n    categoryId: '',\n    brandId: '',\n    description: '',\n    imageUrl: ''\n  });\n\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [touched, setTouched] = useState<Record<string, boolean>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const validateField = (name: keyof FormData, value: string): string | undefined => {\n    switch (name) {\n      case 'name':\n        if (!value.trim()) return 'Product name is required';\n        if (value.length < 3) return 'Name must be at least 3 characters';\n        break;\n      case 'sku':\n        if (!value.trim()) return 'SKU is required';\n        if (!/^[A-Z0-9-]+$/.test(value)) return 'SKU must contain only uppercase letters, numbers, and hyphens';\n        break;\n      case 'price':\n        if (!value) return 'Price is required';\n        if (parseFloat(value) <= 0) return 'Price must be greater than 0';\n        break;\n      case 'stock':\n        if (!value) return 'Stock is required';\n        if (parseInt(value) < 0) return 'Stock cannot be negative';\n        break;\n      case 'categoryId':\n        if (!value) return 'Category is required';\n        break;\n      case 'brandId':\n        if (!value) return 'Brand is required';\n        break;\n    }\n    return undefined;\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n    let isValid = true;\n\n    (Object.keys(formData) as Array<keyof FormData>).forEach(key => {\n      if (['name', 'sku', 'price', 'stock', 'categoryId', 'brandId'].includes(key)) {\n        const error = validateField(key, formData[key]);\n        if (error) {\n          newErrors[key as keyof FormErrors] = error;\n          isValid = false;\n        }\n      }\n    });\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n\n    // Clear error when user starts typing\n    if (touched[name]) {\n      const error = validateField(name as keyof FormData, value);\n      setErrors(prev => ({ ...prev, [name]: error }));\n    }\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setTouched(prev => ({ ...prev, [name]: true }));\n    const error = validateField(name as keyof FormData, value);\n    setErrors(prev => ({ ...prev, [name]: error }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Mark all fields as touched\n    const allTouched = Object.keys(formData).reduce((acc, key) => ({ ...acc, [key]: true }), {});\n    setTouched(allTouched);\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    // Send message to Claude with product data\n    const productData = {\n      name: formData.name,\n      sku: formData.sku,\n      price: parseFloat(formData.price),\n      stock: parseInt(formData.stock),\n      categoryId: parseInt(formData.categoryId),\n      brandId: parseInt(formData.brandId),\n      description: formData.description,\n      imageUrl: formData.imageUrl\n    };\n\n    (window as any).openai?.sendMessage(`Create new product: ${JSON.stringify(productData, null, 2)}`);\n\n    // Reset form after short delay\n    setTimeout(() => {\n      setIsSubmitting(false);\n      setFormData({\n        name: '',\n        sku: '',\n        price: '',\n        stock: '',\n        categoryId: '',\n        brandId: '',\n        description: '',\n        imageUrl: ''\n      });\n      setTouched({});\n      setErrors({});\n    }, 1000);\n  };\n\n  const selectedCategory = categories.find(c => c.id === parseInt(formData.categoryId));\n  const selectedBrand = brands.find(b => b.id === parseInt(formData.brandId));\n\n  return (\n    <div className={`product-creation-container ${displayMode}`}>\n      <style>{`\n        .product-creation-container {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          padding: 1.5rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          min-height: 100vh;\n        }\n\n        .creation-header {\n          text-align: center;\n          margin-bottom: 2rem;\n        }\n\n        .creation-title {\n          color: white;\n          font-size: 2rem;\n          font-weight: 700;\n          margin: 0 0 0.5rem;\n        }\n\n        .creation-subtitle {\n          color: white;\n          font-size: 1rem;\n          opacity: 0.9;\n        }\n\n        .creation-content {\n          display: grid;\n          grid-template-columns: 1fr;\n          gap: 1.5rem;\n        }\n\n        .product-creation-container:not(.pip) .creation-content {\n          grid-template-columns: 1fr 1fr;\n        }\n\n        .form-card {\n          background: white;\n          border-radius: 12px;\n          padding: 2rem;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .preview-card {\n          background: white;\n          border-radius: 12px;\n          padding: 2rem;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n          height: fit-content;\n          position: sticky;\n          top: 1rem;\n        }\n\n        .card-title {\n          font-size: 1.5rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin: 0 0 1.5rem;\n          padding-bottom: 0.75rem;\n          border-bottom: 2px solid #f3f4f6;\n        }\n\n        .form-group {\n          margin-bottom: 1.5rem;\n        }\n\n        .form-label {\n          display: block;\n          font-size: 0.875rem;\n          font-weight: 600;\n          color: #374151;\n          margin-bottom: 0.5rem;\n        }\n\n        .required {\n          color: #ef4444;\n        }\n\n        .form-input,\n        .form-textarea,\n        .form-select {\n          width: 100%;\n          padding: 0.75rem;\n          border: 2px solid #e5e7eb;\n          border-radius: 8px;\n          font-size: 1rem;\n          transition: border-color 0.2s;\n          box-sizing: border-box;\n        }\n\n        .form-input:focus,\n        .form-textarea:focus,\n        .form-select:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n\n        .form-input.error,\n        .form-textarea.error,\n        .form-select.error {\n          border-color: #ef4444;\n        }\n\n        .form-textarea {\n          min-height: 100px;\n          resize: vertical;\n        }\n\n        .error-message {\n          color: #ef4444;\n          font-size: 0.75rem;\n          margin-top: 0.25rem;\n        }\n\n        .form-grid {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 1rem;\n        }\n\n        .submit-btn {\n          width: 100%;\n          padding: 1rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          border-radius: 8px;\n          font-size: 1rem;\n          font-weight: 600;\n          cursor: pointer;\n          transition: opacity 0.2s;\n          margin-top: 1rem;\n        }\n\n        .submit-btn:hover:not(:disabled) {\n          opacity: 0.9;\n        }\n\n        .submit-btn:disabled {\n          background: #9ca3af;\n          cursor: not-allowed;\n        }\n\n        .preview-product {\n          border: 2px solid #e5e7eb;\n          border-radius: 12px;\n          overflow: hidden;\n        }\n\n        .preview-image {\n          width: 100%;\n          height: 200px;\n          object-fit: cover;\n          background: #f3f4f6;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          color: #9ca3af;\n          font-size: 3rem;\n        }\n\n        .preview-image img {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n\n        .preview-info {\n          padding: 1.5rem;\n        }\n\n        .preview-name {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin: 0 0 0.5rem;\n          min-height: 1.5rem;\n        }\n\n        .preview-sku {\n          font-family: monospace;\n          font-size: 0.875rem;\n          color: #6b7280;\n          margin-bottom: 0.75rem;\n        }\n\n        .preview-badges {\n          display: flex;\n          gap: 0.5rem;\n          margin-bottom: 1rem;\n          flex-wrap: wrap;\n        }\n\n        .preview-badge {\n          display: inline-block;\n          padding: 0.25rem 0.75rem;\n          border-radius: 4px;\n          font-size: 0.75rem;\n          font-weight: 600;\n          background: #f3f4f6;\n          color: #6b7280;\n        }\n\n        .preview-price {\n          font-size: 2rem;\n          font-weight: 700;\n          color: #667eea;\n          margin-bottom: 0.5rem;\n        }\n\n        .preview-stock {\n          font-size: 0.875rem;\n          color: #6b7280;\n          margin-bottom: 1rem;\n        }\n\n        .preview-description {\n          font-size: 0.875rem;\n          color: #6b7280;\n          line-height: 1.5;\n          margin-top: 1rem;\n          padding-top: 1rem;\n          border-top: 1px solid #e5e7eb;\n        }\n\n        .empty-preview {\n          text-align: center;\n          padding: 3rem 1rem;\n          color: #9ca3af;\n        }\n\n        .empty-icon {\n          font-size: 3rem;\n          margin-bottom: 0.5rem;\n        }\n\n        @media (max-width: 768px) {\n          .product-creation-container:not(.pip) .creation-content {\n            grid-template-columns: 1fr;\n          }\n\n          .form-grid {\n            grid-template-columns: 1fr;\n          }\n\n          .preview-card {\n            position: static;\n          }\n        }\n      `}</style>\n\n      <div className=\"creation-header\">\n        <h1 className=\"creation-title\">Create New Product</h1>\n        <div className=\"creation-subtitle\">Fill in the details below to add a new product</div>\n      </div>\n\n      <div className=\"creation-content\">\n        <div className=\"form-card\">\n          <h2 className=\"card-title\">Product Details</h2>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label className=\"form-label\">\n                Product Name <span className=\"required\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                className={`form-input ${touched.name && errors.name ? 'error' : ''}`}\n                value={formData.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Enter product name\"\n              />\n              {touched.name && errors.name && (\n                <div className=\"error-message\">{errors.name}</div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">\n                SKU <span className=\"required\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"sku\"\n                className={`form-input ${touched.sku && errors.sku ? 'error' : ''}`}\n                value={formData.sku}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"PROD-12345\"\n              />\n              {touched.sku && errors.sku && (\n                <div className=\"error-message\">{errors.sku}</div>\n              )}\n            </div>\n\n            <div className=\"form-grid\">\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  Price <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"price\"\n                  className={`form-input ${touched.price && errors.price ? 'error' : ''}`}\n                  value={formData.price}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder=\"0.00\"\n                  step=\"0.01\"\n                  min=\"0\"\n                />\n                {touched.price && errors.price && (\n                  <div className=\"error-message\">{errors.price}</div>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  Stock <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"stock\"\n                  className={`form-input ${touched.stock && errors.stock ? 'error' : ''}`}\n                  value={formData.stock}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder=\"0\"\n                  min=\"0\"\n                />\n                {touched.stock && errors.stock && (\n                  <div className=\"error-message\">{errors.stock}</div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"form-grid\">\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  Category <span className=\"required\">*</span>\n                </label>\n                <select\n                  name=\"categoryId\"\n                  className={`form-select ${touched.categoryId && errors.categoryId ? 'error' : ''}`}\n                  value={formData.categoryId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                >\n                  <option value=\"\">Select category</option>\n                  {categories.map(cat => (\n                    <option key={cat.id} value={cat.id}>{cat.name}</option>\n                  ))}\n                </select>\n                {touched.categoryId && errors.categoryId && (\n                  <div className=\"error-message\">{errors.categoryId}</div>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  Brand <span className=\"required\">*</span>\n                </label>\n                <select\n                  name=\"brandId\"\n                  className={`form-select ${touched.brandId && errors.brandId ? 'error' : ''}`}\n                  value={formData.brandId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                >\n                  <option value=\"\">Select brand</option>\n                  {brands.map(brand => (\n                    <option key={brand.id} value={brand.id}>{brand.name}</option>\n                  ))}\n                </select>\n                {touched.brandId && errors.brandId && (\n                  <div className=\"error-message\">{errors.brandId}</div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Description</label>\n              <textarea\n                name=\"description\"\n                className=\"form-textarea\"\n                value={formData.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Enter product description\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Image URL</label>\n              <input\n                type=\"url\"\n                name=\"imageUrl\"\n                className=\"form-input\"\n                value={formData.imageUrl}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"https://example.com/image.jpg\"\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"submit-btn\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Creating Product...' : 'Create Product'}\n            </button>\n          </form>\n        </div>\n\n        <div className=\"preview-card\">\n          <h2 className=\"card-title\">Preview</h2>\n          {formData.name || formData.price || formData.imageUrl ? (\n            <div className=\"preview-product\">\n              <div className=\"preview-image\">\n                {formData.imageUrl ? (\n                  <img src={formData.imageUrl} alt={formData.name || 'Product'} />\n                ) : (\n                  <span>\uD83D\uDCE6</span>\n                )}\n              </div>\n              <div className=\"preview-info\">\n                <h3 className=\"preview-name\">{formData.name || 'Product Name'}</h3>\n                {formData.sku && (\n                  <div className=\"preview-sku\">SKU: {formData.sku}</div>\n                )}\n                <div className=\"preview-badges\">\n                  {selectedCategory && (\n                    <span className=\"preview-badge\">{selectedCategory.name}</span>\n                  )}\n                  {selectedBrand && (\n                    <span className=\"preview-badge\">{selectedBrand.name}</span>\n                  )}\n                </div>\n                {formData.price && (\n                  <div className=\"preview-price\">${parseFloat(formData.price).toFixed(2)}</div>\n                )}\n                {formData.stock && (\n                  <div className=\"preview-stock\">In Stock: {formData.stock} units</div>\n                )}\n                {formData.description && (\n                  <div className=\"preview-description\">{formData.description}</div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"empty-preview\">\n              <div className=\"empty-icon\">\uD83D\uDCE6</div>\n              <div>Start filling the form to see preview</div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Mount widget\nconst root = document.getElementById('product-creation-root');\nif (root) {\n  ReactDOM.createRoot(root).render(<ProductCreation />);\n}\n", "import { useEffect, useState } from 'react';\n\n/**\n * Hook to access the OpenAI Apps SDK global API\n * Provides access to window.openai for tool calls, state, and messaging\n */\nexport function useOpenAiGlobal() {\n  const [openai, setOpenai] = useState<any>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && (window as any).openai) {\n      setOpenai((window as any).openai);\n    }\n  }, []);\n\n  return openai;\n}\n", "import { useState, useEffect } from 'react';\nimport { useOpenAiGlobal } from './useOpenAiGlobal';\n\n/**\n * Hook for managing widget state with OpenAI Apps SDK\n * Provides persistent state management under 4k token limit\n *\n * @param initialState - Initial state object\n * @returns [state, setState] tuple similar to useState\n */\nexport function useWidgetState<T>(initialState: T) {\n  const openai = useOpenAiGlobal();\n  const [state, setStateInternal] = useState<T>(initialState);\n\n  // Load persisted state on mount\n  useEffect(() => {\n    if (openai?.widgetState) {\n      const savedState = openai.widgetState.get();\n      if (savedState && Object.keys(savedState).length > 0) {\n        setStateInternal({ ...initialState, ...savedState });\n      }\n    }\n  }, [openai]);\n\n  // Persist state on change\n  const setState = (updates: Partial<T> | ((prev: T) => Partial<T>)) => {\n    setStateInternal(prev => {\n      const updatesToApply = typeof updates === 'function' ? updates(prev) : updates;\n      const newState = { ...prev, ...updatesToApply };\n\n      // Persist to OpenAI widget state\n      if (openai?.widgetState) {\n        openai.widgetState.set(newState);\n      }\n\n      return newState;\n    });\n  };\n\n  return [state, setState] as const;\n}\n"],
  "mappings": "AAAA,OAAgB,YAAAA,MAA2B,QAC3C,OAAOC,MAAc,mBCDrB,OAAS,aAAAC,EAAW,YAAAC,MAAgB,QAM7B,SAASC,GAAkB,CAChC,GAAM,CAACC,EAAQC,CAAS,EAAIH,EAAc,IAAI,EAE9C,OAAAD,EAAU,IAAM,CACV,OAAO,OAAW,KAAgB,OAAe,QACnDI,EAAW,OAAe,MAAM,CAEpC,EAAG,CAAC,CAAC,EAEED,CACT,CChBA,OAAS,YAAAE,EAAU,aAAAC,MAAiB,QFqL9B,cAAAC,EA2PA,QAAAC,MA3PA,oBAnJN,SAASC,GAAkB,CAGzB,IAAMC,EADa,OAAe,QAAQ,WACT,CAAC,EAC5BC,EAAyBD,GAAa,YAAc,CACxD,CAAE,GAAI,EAAG,KAAM,aAAc,EAC7B,CAAE,GAAI,EAAG,KAAM,UAAW,EAC1B,CAAE,GAAI,EAAG,KAAM,OAAQ,CACzB,EACME,EAAkBF,GAAa,QAAU,CAC7C,CAAE,GAAI,EAAG,KAAM,SAAU,EACzB,CAAE,GAAI,EAAG,KAAM,SAAU,EACzB,CAAE,GAAI,EAAG,KAAM,SAAU,CAC3B,EAGMG,EAAcC,EAAgB,aAAa,EAE3C,CAACC,EAAUC,CAAW,EAAIC,EAAmB,CACjD,KAAM,GACN,IAAK,GACL,MAAO,GACP,MAAO,GACP,WAAY,GACZ,QAAS,GACT,YAAa,GACb,SAAU,EACZ,CAAC,EAEK,CAACC,EAAQC,CAAS,EAAIF,EAAqB,CAAC,CAAC,EAC7C,CAACG,EAASC,CAAU,EAAIJ,EAAkC,CAAC,CAAC,EAC5D,CAACK,EAAcC,CAAe,EAAIN,EAAS,EAAK,EAEhDO,EAAgB,CAACC,EAAsBC,IAAsC,CACjF,OAAQD,EAAM,CACZ,IAAK,OACH,GAAI,CAACC,EAAM,KAAK,EAAG,MAAO,2BAC1B,GAAIA,EAAM,OAAS,EAAG,MAAO,qCAC7B,MACF,IAAK,MACH,GAAI,CAACA,EAAM,KAAK,EAAG,MAAO,kBAC1B,GAAI,CAAC,eAAe,KAAKA,CAAK,EAAG,MAAO,gEACxC,MACF,IAAK,QACH,GAAI,CAACA,EAAO,MAAO,oBACnB,GAAI,WAAWA,CAAK,GAAK,EAAG,MAAO,+BACnC,MACF,IAAK,QACH,GAAI,CAACA,EAAO,MAAO,oBACnB,GAAI,SAASA,CAAK,EAAI,EAAG,MAAO,2BAChC,MACF,IAAK,aACH,GAAI,CAACA,EAAO,MAAO,uBACnB,MACF,IAAK,UACH,GAAI,CAACA,EAAO,MAAO,oBACnB,KACJ,CAEF,EAEMC,EAAe,IAAe,CAClC,IAAMC,EAAwB,CAAC,EAC3BC,EAAU,GAEd,OAAC,OAAO,KAAKd,CAAQ,EAA4B,QAAQe,GAAO,CAC9D,GAAI,CAAC,OAAQ,MAAO,QAAS,QAAS,aAAc,SAAS,EAAE,SAASA,CAAG,EAAG,CAC5E,IAAMC,EAAQP,EAAcM,EAAKf,EAASe,CAAG,CAAC,EAC1CC,IACFH,EAAUE,CAAuB,EAAIC,EACrCF,EAAU,GAEd,CACF,CAAC,EAEDV,EAAUS,CAAS,EACZC,CACT,EAEMG,EAAgBC,GAAqF,CACzG,GAAM,CAAE,KAAAR,EAAM,MAAAC,CAAM,EAAIO,EAAE,OAI1B,GAHAjB,EAAYkB,IAAS,CAAE,GAAGA,EAAM,CAACT,CAAI,EAAGC,CAAM,EAAE,EAG5CN,EAAQK,CAAI,EAAG,CACjB,IAAMM,EAAQP,EAAcC,EAAwBC,CAAK,EACzDP,EAAUe,IAAS,CAAE,GAAGA,EAAM,CAACT,CAAI,EAAGM,CAAM,EAAE,CAChD,CACF,EAEMI,EAAcF,GAAoF,CACtG,GAAM,CAAE,KAAAR,EAAM,MAAAC,CAAM,EAAIO,EAAE,OAC1BZ,EAAWa,IAAS,CAAE,GAAGA,EAAM,CAACT,CAAI,EAAG,EAAK,EAAE,EAC9C,IAAMM,EAAQP,EAAcC,EAAwBC,CAAK,EACzDP,EAAUe,IAAS,CAAE,GAAGA,EAAM,CAACT,CAAI,EAAGM,CAAM,EAAE,CAChD,EAEMK,EAAgBH,GAAuB,CAC3CA,EAAE,eAAe,EAGjB,IAAMI,EAAa,OAAO,KAAKtB,CAAQ,EAAE,OAAO,CAACuB,EAAKR,KAAS,CAAE,GAAGQ,EAAK,CAACR,CAAG,EAAG,EAAK,GAAI,CAAC,CAAC,EAG3F,GAFAT,EAAWgB,CAAU,EAEjB,CAACV,EAAa,EAChB,OAGFJ,EAAgB,EAAI,EAGpB,IAAMgB,EAAc,CAClB,KAAMxB,EAAS,KACf,IAAKA,EAAS,IACd,MAAO,WAAWA,EAAS,KAAK,EAChC,MAAO,SAASA,EAAS,KAAK,EAC9B,WAAY,SAASA,EAAS,UAAU,EACxC,QAAS,SAASA,EAAS,OAAO,EAClC,YAAaA,EAAS,YACtB,SAAUA,EAAS,QACrB,EAEC,OAAe,QAAQ,YAAY,uBAAuB,KAAK,UAAUwB,EAAa,KAAM,CAAC,CAAC,EAAE,EAGjG,WAAW,IAAM,CACfhB,EAAgB,EAAK,EACrBP,EAAY,CACV,KAAM,GACN,IAAK,GACL,MAAO,GACP,MAAO,GACP,WAAY,GACZ,QAAS,GACT,YAAa,GACb,SAAU,EACZ,CAAC,EACDK,EAAW,CAAC,CAAC,EACbF,EAAU,CAAC,CAAC,CACd,EAAG,GAAI,CACT,EAEMqB,EAAmB7B,EAAW,KAAK8B,GAAKA,EAAE,KAAO,SAAS1B,EAAS,UAAU,CAAC,EAC9E2B,EAAgB9B,EAAO,KAAK+B,GAAKA,EAAE,KAAO,SAAS5B,EAAS,OAAO,CAAC,EAE1E,OACEP,EAAC,OAAI,UAAW,8BAA8BK,CAAW,GACvyPN,EAEFC,EAAC,OAAI,UAAU,kBACb,UAAAD,EAAC,MAAG,UAAU,iBAAiB,8BAAkB,EACjDA,EAAC,OAAI,UAAU,oBAAoB,0DAA8C,GACnF,EAEAC,EAAC,OAAI,UAAU,mBACb,UAAAA,EAAC,OAAI,UAAU,YACb,UAAAD,EAAC,MAAG,UAAU,aAAa,2BAAe,EAC1CC,EAAC,QAAK,SAAU4B,EACd,UAAA5B,EAAC,OAAI,UAAU,aACb,UAAAA,EAAC,SAAM,UAAU,aAAa,0BACfD,EAAC,QAAK,UAAU,WAAW,aAAC,GAC3C,EACAA,EAAC,SACC,KAAK,OACL,KAAK,OACL,UAAW,cAAca,EAAQ,MAAQF,EAAO,KAAO,QAAU,EAAE,GACnE,MAAOH,EAAS,KAChB,SAAUiB,EACV,OAAQG,EACR,YAAY,qBACd,EACCf,EAAQ,MAAQF,EAAO,MACtBX,EAAC,OAAI,UAAU,gBAAiB,SAAAW,EAAO,KAAK,GAEhD,EAEAV,EAAC,OAAI,UAAU,aACb,UAAAA,EAAC,SAAM,UAAU,aAAa,iBACxBD,EAAC,QAAK,UAAU,WAAW,aAAC,GAClC,EACAA,EAAC,SACC,KAAK,OACL,KAAK,MACL,UAAW,cAAca,EAAQ,KAAOF,EAAO,IAAM,QAAU,EAAE,GACjE,MAAOH,EAAS,IAChB,SAAUiB,EACV,OAAQG,EACR,YAAY,aACd,EACCf,EAAQ,KAAOF,EAAO,KACrBX,EAAC,OAAI,UAAU,gBAAiB,SAAAW,EAAO,IAAI,GAE/C,EAEAV,EAAC,OAAI,UAAU,YACb,UAAAA,EAAC,OAAI,UAAU,aACb,UAAAA,EAAC,SAAM,UAAU,aAAa,mBACtBD,EAAC,QAAK,UAAU,WAAW,aAAC,GACpC,EACAA,EAAC,SACC,KAAK,SACL,KAAK,QACL,UAAW,cAAca,EAAQ,OAASF,EAAO,MAAQ,QAAU,EAAE,GACrE,MAAOH,EAAS,MAChB,SAAUiB,EACV,OAAQG,EACR,YAAY,OACZ,KAAK,OACL,IAAI,IACN,EACCf,EAAQ,OAASF,EAAO,OACvBX,EAAC,OAAI,UAAU,gBAAiB,SAAAW,EAAO,MAAM,GAEjD,EAEAV,EAAC,OAAI,UAAU,aACb,UAAAA,EAAC,SAAM,UAAU,aAAa,mBACtBD,EAAC,QAAK,UAAU,WAAW,aAAC,GACpC,EACAA,EAAC,SACC,KAAK,SACL,KAAK,QACL,UAAW,cAAca,EAAQ,OAASF,EAAO,MAAQ,QAAU,EAAE,GACrE,MAAOH,EAAS,MAChB,SAAUiB,EACV,OAAQG,EACR,YAAY,IACZ,IAAI,IACN,EACCf,EAAQ,OAASF,EAAO,OACvBX,EAAC,OAAI,UAAU,gBAAiB,SAAAW,EAAO,MAAM,GAEjD,GACF,EAEAV,EAAC,OAAI,UAAU,YACb,UAAAA,EAAC,OAAI,UAAU,aACb,UAAAA,EAAC,SAAM,UAAU,aAAa,sBACnBD,EAAC,QAAK,UAAU,WAAW,aAAC,GACvC,EACAC,EAAC,UACC,KAAK,aACL,UAAW,eAAeY,EAAQ,YAAcF,EAAO,WAAa,QAAU,EAAE,GAChF,MAAOH,EAAS,WAChB,SAAUiB,EACV,OAAQG,EAER,UAAA5B,EAAC,UAAO,MAAM,GAAG,2BAAe,EAC/BI,EAAW,IAAIiC,GACdrC,EAAC,UAAoB,MAAOqC,EAAI,GAAK,SAAAA,EAAI,MAA5BA,EAAI,EAA6B,CAC/C,GACH,EACCxB,EAAQ,YAAcF,EAAO,YAC5BX,EAAC,OAAI,UAAU,gBAAiB,SAAAW,EAAO,WAAW,GAEtD,EAEAV,EAAC,OAAI,UAAU,aACb,UAAAA,EAAC,SAAM,UAAU,aAAa,mBACtBD,EAAC,QAAK,UAAU,WAAW,aAAC,GACpC,EACAC,EAAC,UACC,KAAK,UACL,UAAW,eAAeY,EAAQ,SAAWF,EAAO,QAAU,QAAU,EAAE,GAC1E,MAAOH,EAAS,QAChB,SAAUiB,EACV,OAAQG,EAER,UAAA5B,EAAC,UAAO,MAAM,GAAG,wBAAY,EAC5BK,EAAO,IAAIiC,GACVtC,EAAC,UAAsB,MAAOsC,EAAM,GAAK,SAAAA,EAAM,MAAlCA,EAAM,EAAiC,CACrD,GACH,EACCzB,EAAQ,SAAWF,EAAO,SACzBX,EAAC,OAAI,UAAU,gBAAiB,SAAAW,EAAO,QAAQ,GAEnD,GACF,EAEAV,EAAC,OAAI,UAAU,aACb,UAAAD,EAAC,SAAM,UAAU,aAAa,uBAAW,EACzCA,EAAC,YACC,KAAK,cACL,UAAU,gBACV,MAAOQ,EAAS,YAChB,SAAUiB,EACV,OAAQG,EACR,YAAY,4BACd,GACF,EAEA3B,EAAC,OAAI,UAAU,aACb,UAAAD,EAAC,SAAM,UAAU,aAAa,qBAAS,EACvCA,EAAC,SACC,KAAK,MACL,KAAK,WACL,UAAU,aACV,MAAOQ,EAAS,SAChB,SAAUiB,EACV,OAAQG,EACR,YAAY,gCACd,GACF,EAEA5B,EAAC,UACC,KAAK,SACL,UAAU,aACV,SAAUe,EAET,SAAAA,EAAe,sBAAwB,iBAC1C,GACF,GACF,EAEAd,EAAC,OAAI,UAAU,eACb,UAAAD,EAAC,MAAG,UAAU,aAAa,mBAAO,EACjCQ,EAAS,MAAQA,EAAS,OAASA,EAAS,SAC3CP,EAAC,OAAI,UAAU,kBACb,UAAAD,EAAC,OAAI,UAAU,gBACZ,SAAAQ,EAAS,SACRR,EAAC,OAAI,IAAKQ,EAAS,SAAU,IAAKA,EAAS,MAAQ,UAAW,EAE9DR,EAAC,QAAK,qBAAE,EAEZ,EACAC,EAAC,OAAI,UAAU,eACb,UAAAD,EAAC,MAAG,UAAU,eAAgB,SAAAQ,EAAS,MAAQ,eAAe,EAC7DA,EAAS,KACRP,EAAC,OAAI,UAAU,cAAc,kBAAMO,EAAS,KAAI,EAElDP,EAAC,OAAI,UAAU,iBACZ,UAAAgC,GACCjC,EAAC,QAAK,UAAU,gBAAiB,SAAAiC,EAAiB,KAAK,EAExDE,GACCnC,EAAC,QAAK,UAAU,gBAAiB,SAAAmC,EAAc,KAAK,GAExD,EACC3B,EAAS,OACRP,EAAC,OAAI,UAAU,gBAAgB,cAAE,WAAWO,EAAS,KAAK,EAAE,QAAQ,CAAC,GAAE,EAExEA,EAAS,OACRP,EAAC,OAAI,UAAU,gBAAgB,uBAAWO,EAAS,MAAM,UAAM,EAEhEA,EAAS,aACRR,EAAC,OAAI,UAAU,sBAAuB,SAAAQ,EAAS,YAAY,GAE/D,GACF,EAEAP,EAAC,OAAI,UAAU,gBACb,UAAAD,EAAC,OAAI,UAAU,aAAa,qBAAE,EAC9BA,EAAC,OAAI,iDAAqC,GAC5C,GAEJ,GACF,GACF,CAEJ,CAGA,IAAMuC,EAAO,SAAS,eAAe,uBAAuB,EACxDA,GACFC,EAAS,WAAWD,CAAI,EAAE,OAAOvC,EAACE,EAAA,EAAgB,CAAE",
  "names": ["useState", "ReactDOM", "useEffect", "useState", "useOpenAiGlobal", "openai", "setOpenai", "useState", "useEffect", "jsx", "jsxs", "ProductCreation", "apiResponse", "categories", "brands", "displayMode", "useOpenAiGlobal", "formData", "setFormData", "useState", "errors", "setErrors", "touched", "setTouched", "isSubmitting", "setIsSubmitting", "validateField", "name", "value", "validateForm", "newErrors", "isValid", "key", "error", "handleChange", "e", "prev", "handleBlur", "handleSubmit", "allTouched", "acc", "productData", "selectedCategory", "c", "selectedBrand", "b", "cat", "brand", "root", "ReactDOM"]
}
