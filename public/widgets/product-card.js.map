{
  "version": 3,
  "sources": ["../../widgets/src/product-card.tsx", "../../widgets/hooks/useOpenAiGlobal.ts", "../../widgets/hooks/useWidgetState.ts"],
  "sourcesContent": ["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useOpenAiGlobal, useWidgetState } from '../hooks';\n\ninterface Product {\n  id: number;\n  name: string;\n  description?: string;\n  price: number;\n  image: string;\n  stock: number;\n  sku: string;\n  category?: string;\n  brand?: string;\n  active?: boolean;\n}\n\ninterface CartItem {\n  id: number;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n}\n\ninterface WidgetStateType {\n  cart: {\n    items: CartItem[];\n    total: number;\n  };\n}\n\nfunction ProductCard() {\n  // Get data from tool invocation\n  const toolInput = (window as any).openai?.toolInput;\n  const apiResponse = toolInput || {};\n  const product: Product = apiResponse?.product || apiResponse || {\n    id: 0,\n    name: 'Sample Product',\n    description: 'Product description not available',\n    price: 0,\n    image: '',\n    stock: 0,\n    sku: 'N/A',\n    category: 'Uncategorized',\n    brand: 'Unknown'\n  };\n\n  // Widget state for cart\n  const [widgetState, updateWidgetState] = useWidgetState<WidgetStateType>({\n    cart: { items: [], total: 0 }\n  });\n\n  // Display mode for responsive layout\n  const displayMode = useOpenAiGlobal('displayMode');\n\n  const [quantity, setQuantity] = useState(1);\n  const [selectedImage, setSelectedImage] = useState(product.image);\n\n  const handleQuantityChange = (delta: number) => {\n    const newQuantity = quantity + delta;\n    if (newQuantity >= 1 && newQuantity <= product.stock) {\n      setQuantity(newQuantity);\n    }\n  };\n\n  const handleAddToCart = () => {\n    const existingItem = widgetState.cart.items.find(item => item.id === product.id);\n\n    let newCart;\n    if (existingItem) {\n      // Update quantity\n      newCart = {\n        items: widgetState.cart.items.map(item =>\n          item.id === product.id\n            ? { ...item, quantity: item.quantity + quantity }\n            : item\n        ),\n        total: widgetState.cart.total + (product.price * quantity)\n      };\n    } else {\n      // Add new item\n      newCart = {\n        items: [...widgetState.cart.items, {\n          id: product.id,\n          name: product.name,\n          price: product.price,\n          quantity: quantity,\n          image: product.image\n        }],\n        total: widgetState.cart.total + (product.price * quantity)\n      };\n    }\n\n    updateWidgetState({ cart: newCart });\n\n    // Notify Claude\n    (window as any).openai?.sendMessage(`Added ${quantity} x ${product.name} to cart ($${(product.price * quantity).toFixed(2)})`);\n\n    // Reset quantity\n    setQuantity(1);\n  };\n\n  const handleViewAllProducts = () => {\n    (window as any).openai?.sendMessage('Show all products');\n  };\n\n  const getStockStatus = () => {\n    if (product.stock === 0) {\n      return { label: 'Out of Stock', color: '#ef4444', bgColor: '#fee2e2' };\n    } else if (product.stock <= 5) {\n      return { label: `Only ${product.stock} left`, color: '#f59e0b', bgColor: '#fef3c7' };\n    } else {\n      return { label: `${product.stock} in stock`, color: '#10b981', bgColor: '#d1fae5' };\n    }\n  };\n\n  const stockStatus = getStockStatus();\n  const totalPrice = product.price * quantity;\n\n  return (\n    <div className={`product-card-container ${displayMode}`}>\n      <style>{`\n        .product-card-container {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          padding: 1.5rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          min-height: 100vh;\n        }\n\n        .card-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1.5rem;\n        }\n\n        .header-title {\n          color: white;\n          font-size: 1.5rem;\n          font-weight: 700;\n          margin: 0;\n        }\n\n        .back-btn {\n          padding: 0.5rem 1rem;\n          background: white;\n          color: #667eea;\n          border: none;\n          border-radius: 8px;\n          font-size: 0.875rem;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n\n        .back-btn:hover {\n          background: #f3f4f6;\n        }\n\n        .product-detail {\n          background: white;\n          border-radius: 12px;\n          padding: 2rem;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .product-layout {\n          display: grid;\n          grid-template-columns: 1fr;\n          gap: 2rem;\n        }\n\n        .product-card-container:not(.pip) .product-layout {\n          grid-template-columns: 1fr 1fr;\n        }\n\n        .product-images {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n        }\n\n        .main-image {\n          width: 100%;\n          aspect-ratio: 1;\n          object-fit: cover;\n          border-radius: 12px;\n          background: #f3f4f6;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .main-image img {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n          border-radius: 12px;\n        }\n\n        .placeholder-icon {\n          font-size: 5rem;\n          color: #9ca3af;\n        }\n\n        .product-info {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .product-header {\n          margin-bottom: 1.5rem;\n        }\n\n        .product-name {\n          font-size: 2rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin: 0 0 0.5rem;\n          line-height: 1.2;\n        }\n\n        .product-sku {\n          font-family: monospace;\n          font-size: 0.875rem;\n          color: #6b7280;\n          margin-bottom: 1rem;\n        }\n\n        .product-badges {\n          display: flex;\n          gap: 0.5rem;\n          flex-wrap: wrap;\n        }\n\n        .badge {\n          display: inline-block;\n          padding: 0.5rem 1rem;\n          border-radius: 8px;\n          font-size: 0.875rem;\n          font-weight: 600;\n        }\n\n        .category-badge {\n          background: #ede9fe;\n          color: #6d28d9;\n        }\n\n        .brand-badge {\n          background: #dbeafe;\n          color: #1e40af;\n        }\n\n        .stock-badge {\n          display: inline-block;\n          padding: 0.5rem 1rem;\n          border-radius: 8px;\n          font-size: 0.875rem;\n          font-weight: 600;\n          margin-top: 1rem;\n        }\n\n        .product-price {\n          font-size: 3rem;\n          font-weight: 700;\n          color: #667eea;\n          margin: 1.5rem 0;\n        }\n\n        .product-description {\n          font-size: 1rem;\n          color: #6b7280;\n          line-height: 1.6;\n          margin-bottom: 2rem;\n          padding-bottom: 2rem;\n          border-bottom: 2px solid #f3f4f6;\n        }\n\n        .quantity-section {\n          margin-bottom: 1.5rem;\n        }\n\n        .section-label {\n          font-size: 0.875rem;\n          font-weight: 600;\n          color: #374151;\n          margin-bottom: 0.75rem;\n        }\n\n        .quantity-controls {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n          background: #f3f4f6;\n          border-radius: 8px;\n          padding: 0.5rem;\n          width: fit-content;\n        }\n\n        .qty-btn {\n          width: 40px;\n          height: 40px;\n          border: none;\n          background: white;\n          border-radius: 6px;\n          font-size: 1.25rem;\n          font-weight: 600;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: background 0.2s;\n        }\n\n        .qty-btn:hover:not(:disabled) {\n          background: #e5e7eb;\n        }\n\n        .qty-btn:disabled {\n          opacity: 0.3;\n          cursor: not-allowed;\n        }\n\n        .qty-value {\n          min-width: 60px;\n          text-align: center;\n          font-weight: 700;\n          font-size: 1.25rem;\n          color: #1f2937;\n        }\n\n        .price-summary {\n          background: #f9fafb;\n          border-radius: 8px;\n          padding: 1rem;\n          margin-bottom: 1rem;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .summary-label {\n          font-size: 1rem;\n          color: #6b7280;\n        }\n\n        .summary-value {\n          font-size: 1.5rem;\n          font-weight: 700;\n          color: #667eea;\n        }\n\n        .action-buttons {\n          display: flex;\n          flex-direction: column;\n          gap: 0.75rem;\n        }\n\n        .add-to-cart-btn {\n          width: 100%;\n          padding: 1rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          border-radius: 8px;\n          font-size: 1rem;\n          font-weight: 600;\n          cursor: pointer;\n          transition: opacity 0.2s;\n        }\n\n        .add-to-cart-btn:hover:not(:disabled) {\n          opacity: 0.9;\n        }\n\n        .add-to-cart-btn:disabled {\n          background: #9ca3af;\n          cursor: not-allowed;\n        }\n\n        .view-all-btn {\n          width: 100%;\n          padding: 1rem;\n          background: white;\n          color: #667eea;\n          border: 2px solid #667eea;\n          border-radius: 8px;\n          font-size: 1rem;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n\n        .view-all-btn:hover {\n          background: #f3f4f6;\n        }\n\n        .cart-indicator {\n          background: #f9fafb;\n          border-radius: 8px;\n          padding: 1rem;\n          margin-top: 1rem;\n          text-align: center;\n          border: 2px dashed #e5e7eb;\n        }\n\n        .cart-count {\n          font-size: 0.875rem;\n          color: #6b7280;\n        }\n\n        .cart-total {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: #667eea;\n          margin-top: 0.25rem;\n        }\n\n        @media (max-width: 768px) {\n          .product-card-container:not(.pip) .product-layout {\n            grid-template-columns: 1fr;\n          }\n\n          .product-name {\n            font-size: 1.5rem;\n          }\n\n          .product-price {\n            font-size: 2rem;\n          }\n\n          .header-title {\n            font-size: 1.25rem;\n          }\n        }\n      `}</style>\n\n      <div className=\"card-header\">\n        <h1 className=\"header-title\">Product Details</h1>\n        <button className=\"back-btn\" onClick={handleViewAllProducts}>\n          \u2190 View All Products\n        </button>\n      </div>\n\n      <div className=\"product-detail\">\n        <div className=\"product-layout\">\n          <div className=\"product-images\">\n            <div className=\"main-image\">\n              {product.image ? (\n                <img src={product.image} alt={product.name} />\n              ) : (\n                <div className=\"placeholder-icon\">\uD83D\uDCE6</div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"product-info\">\n            <div className=\"product-header\">\n              <h2 className=\"product-name\">{product.name}</h2>\n              <div className=\"product-sku\">SKU: {product.sku}</div>\n              <div className=\"product-badges\">\n                {product.category && (\n                  <span className=\"badge category-badge\">{product.category}</span>\n                )}\n                {product.brand && (\n                  <span className=\"badge brand-badge\">{product.brand}</span>\n                )}\n              </div>\n              <div\n                className=\"stock-badge\"\n                style={{\n                  backgroundColor: stockStatus.bgColor,\n                  color: stockStatus.color\n                }}\n              >\n                {stockStatus.label}\n              </div>\n            </div>\n\n            <div className=\"product-price\">\n              ${product.price.toFixed(2)}\n            </div>\n\n            {product.description && (\n              <div className=\"product-description\">\n                {product.description}\n              </div>\n            )}\n\n            <div className=\"quantity-section\">\n              <div className=\"section-label\">Quantity</div>\n              <div className=\"quantity-controls\">\n                <button\n                  className=\"qty-btn\"\n                  onClick={() => handleQuantityChange(-1)}\n                  disabled={quantity <= 1}\n                >\n                  \u2212\n                </button>\n                <span className=\"qty-value\">{quantity}</span>\n                <button\n                  className=\"qty-btn\"\n                  onClick={() => handleQuantityChange(1)}\n                  disabled={quantity >= product.stock}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n\n            <div className=\"price-summary\">\n              <span className=\"summary-label\">Total Price</span>\n              <span className=\"summary-value\">${totalPrice.toFixed(2)}</span>\n            </div>\n\n            <div className=\"action-buttons\">\n              <button\n                className=\"add-to-cart-btn\"\n                onClick={handleAddToCart}\n                disabled={product.stock === 0}\n              >\n                {product.stock > 0 ? 'Add to Cart' : 'Out of Stock'}\n              </button>\n              <button className=\"view-all-btn\" onClick={handleViewAllProducts}>\n                Continue Shopping\n              </button>\n            </div>\n\n            {widgetState.cart.items.length > 0 && (\n              <div className=\"cart-indicator\">\n                <div className=\"cart-count\">\n                  {widgetState.cart.items.reduce((sum, item) => sum + item.quantity, 0)} items in cart\n                </div>\n                <div className=\"cart-total\">\n                  ${widgetState.cart.total.toFixed(2)}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Mount widget\nconst root = document.getElementById('product-card-root');\nif (root) {\n  ReactDOM.createRoot(root).render(<ProductCard />);\n}\n", "import { useEffect, useState } from 'react';\n\n/**\n * Hook to access the OpenAI Apps SDK global API\n * Provides access to window.openai for tool calls, state, and messaging\n */\nexport function useOpenAiGlobal() {\n  const [openai, setOpenai] = useState<any>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && (window as any).openai) {\n      setOpenai((window as any).openai);\n    }\n  }, []);\n\n  return openai;\n}\n", "import { useState, useEffect } from 'react';\nimport { useOpenAiGlobal } from './useOpenAiGlobal';\n\n/**\n * Hook for managing widget state with OpenAI Apps SDK\n * Provides persistent state management under 4k token limit\n *\n * @param initialState - Initial state object\n * @returns [state, setState] tuple similar to useState\n */\nexport function useWidgetState<T>(initialState: T) {\n  const openai = useOpenAiGlobal();\n  const [state, setStateInternal] = useState<T>(initialState);\n\n  // Load persisted state on mount\n  useEffect(() => {\n    if (openai?.widgetState) {\n      const savedState = openai.widgetState.get();\n      if (savedState && Object.keys(savedState).length > 0) {\n        setStateInternal({ ...initialState, ...savedState });\n      }\n    }\n  }, [openai]);\n\n  // Persist state on change\n  const setState = (updates: Partial<T> | ((prev: T) => Partial<T>)) => {\n    setStateInternal(prev => {\n      const updatesToApply = typeof updates === 'function' ? updates(prev) : updates;\n      const newState = { ...prev, ...updatesToApply };\n\n      // Persist to OpenAI widget state\n      if (openai?.widgetState) {\n        openai.widgetState.set(newState);\n      }\n\n      return newState;\n    });\n  };\n\n  return [state, setState] as const;\n}\n"],
  "mappings": "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",
  "names": ["useState", "ReactDOM", "useEffect", "useState", "useOpenAiGlobal", "openai", "setOpenai", "useState", "useEffect", "useWidgetState", "initialState", "openai", "useOpenAiGlobal", "state", "setStateInternal", "useState", "useEffect", "savedState", "updates", "prev", "updatesToApply", "newState", "jsx", "jsxs", "ProductCard", "apiResponse", "product", "widgetState", "updateWidgetState", "useWidgetState", "displayMode", "useOpenAiGlobal", "quantity", "setQuantity", "useState", "selectedImage", "setSelectedImage", "handleQuantityChange", "delta", "newQuantity", "handleAddToCart", "existingItem", "item", "newCart", "handleViewAllProducts", "stockStatus", "totalPrice", "sum", "root", "ReactDOM"]
}
