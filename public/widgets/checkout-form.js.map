{
  "version": 3,
  "sources": ["../../widgets/src/checkout-form.tsx", "../../widgets/hooks/useOpenAiGlobal.ts", "../../widgets/hooks/useWidgetState.ts"],
  "sourcesContent": ["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useOpenAiGlobal } from '../hooks';\n\ninterface CartItem {\n  id: number;\n  name: string;\n  price: number;\n  quantity: number;\n}\n\ninterface Customer {\n  id: number;\n  name: string;\n  email: string;\n  phone?: string;\n}\n\ninterface PaymentMethod {\n  id: number;\n  name: string;\n}\n\ninterface City {\n  id: number;\n  name: string;\n}\n\nfunction CheckoutForm() {\n  // Get data from tool invocation\n  const toolInput = (window as any).openai?.toolInput;\n  const apiResponse = toolInput || {};\n\n  const cartItems: CartItem[] = apiResponse?.cartItems || [];\n  const customers: Customer[] = apiResponse?.customers || [];\n  const paymentMethods: PaymentMethod[] = apiResponse?.paymentMethods || [];\n  const cities: City[] = apiResponse?.cities || [];\n  const subtotal = apiResponse?.subtotal || cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n\n  const displayMode = useOpenAiGlobal('displayMode');\n\n  const [formData, setFormData] = useState({\n    customerId: '',\n    address: '',\n    cityId: '',\n    phone: '',\n    paymentMethodId: '',\n    notes: ''\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const validate = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.customerId) newErrors.customerId = 'Please select a customer';\n    if (!formData.address.trim()) newErrors.address = 'Address is required';\n    if (!formData.cityId) newErrors.cityId = 'Please select a city';\n    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\n    if (!formData.paymentMethodId) newErrors.paymentMethodId = 'Please select a payment method';\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validate()) {\n      return;\n    }\n\n    const selectedCustomer = customers.find(c => c.id.toString() === formData.customerId);\n    const selectedCity = cities.find(c => c.id.toString() === formData.cityId);\n    const selectedPayment = paymentMethods.find(p => p.id.toString() === formData.paymentMethodId);\n\n    const orderDetails = {\n      customer: selectedCustomer?.name,\n      address: formData.address,\n      city: selectedCity?.name,\n      phone: formData.phone,\n      paymentMethod: selectedPayment?.name,\n      notes: formData.notes,\n      total: (subtotal + tax + shipping).toFixed(2)\n    };\n\n    (window as any).openai?.sendMessage(`Create order: ${JSON.stringify(orderDetails)}`);\n  };\n\n  const tax = subtotal * 0.1;\n  const shipping = 15;\n  const total = subtotal + tax + shipping;\n\n  return (\n    <div className={`checkout-container ${displayMode}`}>\n      <style>{`\n        .checkout-container {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          padding: 1.5rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          min-height: 100vh;\n        }\n\n        .checkout-title {\n          color: white;\n          font-size: 2rem;\n          font-weight: 700;\n          margin: 0 0 1.5rem 0;\n        }\n\n        .checkout-content {\n          display: grid;\n          grid-template-columns: 1fr;\n          gap: 1.5rem;\n        }\n\n        .checkout-container:not(.pip) .checkout-content {\n          grid-template-columns: 1.5fr 1fr;\n        }\n\n        .checkout-form {\n          background: white;\n          border-radius: 12px;\n          padding: 2rem;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .form-section {\n          margin-bottom: 2rem;\n        }\n\n        .form-section:last-child {\n          margin-bottom: 0;\n        }\n\n        .section-title {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin: 0 0 1rem 0;\n        }\n\n        .form-group {\n          margin-bottom: 1.25rem;\n        }\n\n        .form-label {\n          display: block;\n          font-size: 0.875rem;\n          font-weight: 600;\n          color: #374151;\n          margin-bottom: 0.5rem;\n        }\n\n        .form-label.required::after {\n          content: ' *';\n          color: #ef4444;\n        }\n\n        .form-input,\n        .form-select,\n        .form-textarea {\n          width: 100%;\n          padding: 0.75rem;\n          border: 2px solid #e5e7eb;\n          border-radius: 8px;\n          font-size: 1rem;\n          transition: border-color 0.2s;\n        }\n\n        .form-input:focus,\n        .form-select:focus,\n        .form-textarea:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n\n        .form-input.error,\n        .form-select.error,\n        .form-textarea.error {\n          border-color: #ef4444;\n        }\n\n        .form-error {\n          color: #ef4444;\n          font-size: 0.875rem;\n          margin-top: 0.25rem;\n        }\n\n        .form-textarea {\n          resize: vertical;\n          min-height: 80px;\n        }\n\n        .order-summary {\n          background: white;\n          border-radius: 12px;\n          padding: 1.5rem;\n          height: fit-content;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n          position: sticky;\n          top: 1rem;\n        }\n\n        .summary-title {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin: 0 0 1rem 0;\n        }\n\n        .summary-items {\n          margin-bottom: 1rem;\n          padding-bottom: 1rem;\n          border-bottom: 1px solid #e5e7eb;\n        }\n\n        .summary-item {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 0.5rem;\n          font-size: 0.875rem;\n          color: #6b7280;\n        }\n\n        .summary-row {\n          display: flex;\n          justify-content: space-between;\n          padding: 0.75rem 0;\n          border-bottom: 1px solid #f3f4f6;\n        }\n\n        .summary-row:last-of-type {\n          border-bottom: none;\n          padding-top: 1rem;\n          margin-top: 0.5rem;\n          border-top: 2px solid #e5e7eb;\n          font-size: 1.25rem;\n          font-weight: 700;\n        }\n\n        .summary-label {\n          color: #6b7280;\n        }\n\n        .summary-value {\n          font-weight: 600;\n          color: #1f2937;\n        }\n\n        .summary-row:last-of-type .summary-label,\n        .summary-row:last-of-type .summary-value {\n          color: #667eea;\n        }\n\n        .submit-btn {\n          width: 100%;\n          padding: 1rem;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          border-radius: 8px;\n          font-size: 1rem;\n          font-weight: 600;\n          cursor: pointer;\n          transition: opacity 0.2s;\n        }\n\n        .submit-btn:hover {\n          opacity: 0.9;\n        }\n\n        .submit-btn:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        @media (max-width: 768px) {\n          .checkout-container:not(.pip) .checkout-content {\n            grid-template-columns: 1fr;\n          }\n        }\n      `}</style>\n\n      <h1 className=\"checkout-title\">Checkout</h1>\n\n      <div className=\"checkout-content\">\n        <form className=\"checkout-form\" onSubmit={handleSubmit}>\n          <div className=\"form-section\">\n            <h2 className=\"section-title\">Customer Information</h2>\n            <div className=\"form-group\">\n              <label className=\"form-label required\">Customer</label>\n              <select\n                name=\"customerId\"\n                value={formData.customerId}\n                onChange={handleChange}\n                className={`form-select ${errors.customerId ? 'error' : ''}`}\n              >\n                <option value=\"\">Select a customer</option>\n                {customers.map(customer => (\n                  <option key={customer.id} value={customer.id}>\n                    {customer.name} - {customer.email}\n                  </option>\n                ))}\n              </select>\n              {errors.customerId && <div className=\"form-error\">{errors.customerId}</div>}\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <h2 className=\"section-title\">Delivery Address</h2>\n            <div className=\"form-group\">\n              <label className=\"form-label required\">Street Address</label>\n              <input\n                type=\"text\"\n                name=\"address\"\n                value={formData.address}\n                onChange={handleChange}\n                className={`form-input ${errors.address ? 'error' : ''}`}\n                placeholder=\"123 Main St, Apt 4B\"\n              />\n              {errors.address && <div className=\"form-error\">{errors.address}</div>}\n            </div>\n            <div className=\"form-group\">\n              <label className=\"form-label required\">City</label>\n              <select\n                name=\"cityId\"\n                value={formData.cityId}\n                onChange={handleChange}\n                className={`form-select ${errors.cityId ? 'error' : ''}`}\n              >\n                <option value=\"\">Select a city</option>\n                {cities.map(city => (\n                  <option key={city.id} value={city.id}>{city.name}</option>\n                ))}\n              </select>\n              {errors.cityId && <div className=\"form-error\">{errors.cityId}</div>}\n            </div>\n            <div className=\"form-group\">\n              <label className=\"form-label required\">Phone Number</label>\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                value={formData.phone}\n                onChange={handleChange}\n                className={`form-input ${errors.phone ? 'error' : ''}`}\n                placeholder=\"+1 (555) 123-4567\"\n              />\n              {errors.phone && <div className=\"form-error\">{errors.phone}</div>}\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <h2 className=\"section-title\">Payment Method</h2>\n            <div className=\"form-group\">\n              <label className=\"form-label required\">Payment Method</label>\n              <select\n                name=\"paymentMethodId\"\n                value={formData.paymentMethodId}\n                onChange={handleChange}\n                className={`form-select ${errors.paymentMethodId ? 'error' : ''}`}\n              >\n                <option value=\"\">Select payment method</option>\n                {paymentMethods.map(method => (\n                  <option key={method.id} value={method.id}>{method.name}</option>\n                ))}\n              </select>\n              {errors.paymentMethodId && <div className=\"form-error\">{errors.paymentMethodId}</div>}\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <h2 className=\"section-title\">Additional Notes</h2>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Order Notes (Optional)</label>\n              <textarea\n                name=\"notes\"\n                value={formData.notes}\n                onChange={handleChange}\n                className=\"form-textarea\"\n                placeholder=\"Any special instructions for delivery...\"\n              />\n            </div>\n          </div>\n        </form>\n\n        <div className=\"order-summary\">\n          <h2 className=\"summary-title\">Order Summary</h2>\n\n          {cartItems.length > 0 && (\n            <div className=\"summary-items\">\n              {cartItems.map(item => (\n                <div key={item.id} className=\"summary-item\">\n                  <span>{item.name} x{item.quantity}</span>\n                  <span>${(item.price * item.quantity).toFixed(2)}</span>\n                </div>\n              ))}\n            </div>\n          )}\n\n          <div className=\"summary-row\">\n            <span className=\"summary-label\">Subtotal</span>\n            <span className=\"summary-value\">${subtotal.toFixed(2)}</span>\n          </div>\n          <div className=\"summary-row\">\n            <span className=\"summary-label\">Tax (10%)</span>\n            <span className=\"summary-value\">${tax.toFixed(2)}</span>\n          </div>\n          <div className=\"summary-row\">\n            <span className=\"summary-label\">Shipping</span>\n            <span className=\"summary-value\">${shipping.toFixed(2)}</span>\n          </div>\n          <div className=\"summary-row\">\n            <span className=\"summary-label\">Total</span>\n            <span className=\"summary-value\">${total.toFixed(2)}</span>\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"submit-btn\"\n            onClick={handleSubmit}\n            disabled={cartItems.length === 0}\n          >\n            Place Order ${total.toFixed(2)}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Mount widget\nconst root = document.getElementById('checkout-form-root');\nif (root) {\n  ReactDOM.createRoot(root).render(<CheckoutForm />);\n}\n", "import { useEffect, useState } from 'react';\n\n/**\n * Hook to access the OpenAI Apps SDK global API\n * Provides access to window.openai for tool calls, state, and messaging\n */\nexport function useOpenAiGlobal() {\n  const [openai, setOpenai] = useState<any>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && (window as any).openai) {\n      setOpenai((window as any).openai);\n    }\n  }, []);\n\n  return openai;\n}\n", "import { useState, useEffect } from 'react';\nimport { useOpenAiGlobal } from './useOpenAiGlobal';\n\n/**\n * Hook for managing widget state with OpenAI Apps SDK\n * Provides persistent state management under 4k token limit\n *\n * @param initialState - Initial state object\n * @returns [state, setState] tuple similar to useState\n */\nexport function useWidgetState<T>(initialState: T) {\n  const openai = useOpenAiGlobal();\n  const [state, setStateInternal] = useState<T>(initialState);\n\n  // Load persisted state on mount\n  useEffect(() => {\n    if (openai?.widgetState) {\n      const savedState = openai.widgetState.get();\n      if (savedState && Object.keys(savedState).length > 0) {\n        setStateInternal({ ...initialState, ...savedState });\n      }\n    }\n  }, [openai]);\n\n  // Persist state on change\n  const setState = (updates: Partial<T> | ((prev: T) => Partial<T>)) => {\n    setStateInternal(prev => {\n      const updatesToApply = typeof updates === 'function' ? updates(prev) : updates;\n      const newState = { ...prev, ...updatesToApply };\n\n      // Persist to OpenAI widget state\n      if (openai?.widgetState) {\n        openai.widgetState.set(newState);\n      }\n\n      return newState;\n    });\n  };\n\n  return [state, setState] as const;\n}\n"],
  "mappings": "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",
  "names": ["useState", "ReactDOM", "useEffect", "useState", "useOpenAiGlobal", "openai", "setOpenai", "useState", "useEffect", "jsx", "jsxs", "CheckoutForm", "apiResponse", "cartItems", "customers", "paymentMethods", "cities", "subtotal", "sum", "item", "displayMode", "useOpenAiGlobal", "formData", "setFormData", "useState", "errors", "setErrors", "handleChange", "name", "value", "prev", "validate", "newErrors", "handleSubmit", "selectedCustomer", "c", "selectedCity", "selectedPayment", "p", "orderDetails", "tax", "shipping", "total", "customer", "city", "method", "root", "ReactDOM"]
}
